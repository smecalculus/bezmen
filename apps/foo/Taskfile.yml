version: '3'

set: [pipefail]

vars:
  APP_FOO_REVISION:
    sh: git write-tree --prefix=apps/foo
  APP_FOO_REV: '{{.APP_FOO_REVISION | trunc 7}}'
  APP_FOO_VERSION: '{{.APP_VERSION}}-{{.APP_FOO_REV}}'
  APP_FOO_IMAGE: app-foo
  APP_FOO_REPO: '{{.REGISTRY}}/smecalculus/{{.APP_FOO_IMAGE}}'
  APP_FOO_REF: '{{.APP_FOO_REPO}}:{{.APP_FOO_REV}}'

tasks:
  binary:
    run: once
    status:
      - test -f target/app-foo-{{.APP_FOO_VERSION}}.jar
    deps:
      - task: ::shared:binary
    cmds:
      - task: reset-1
      - mvn package -am -T1C -Drevision={{.APP_FOO_VERSION}}
  image:
    run: once
    vars:
      COMMAND: '{{if eq .REGISTRY "localhost"}}inspect{{else}}pull{{end}}'
    status:
      - docker image {{.COMMAND}} {{.APP_FOO_REF}}
    deps:
      - task: binary
    cmds:
      - task: reset-2
      - cmd: >
          docker build target/docker-context
          -f Dockerfile
          -t {{.APP_FOO_REF}}
  reset-1:
    run: once
    internal: true
    cmds:
      - cmd: find . -name "*.jar" -type f -delete
        ignore_error: true
  reset-2:
    run: once
    internal: true
    cmds:
      - cmd: docker rm -f $(docker ps -aq -f label=bezmen.image={{.APP_FOO_IMAGE}}) 2> /dev/null
#      - cmd: docker rm -f $(docker ps -aq -f label=bezmen.image={{.APP_FOO_IMAGE}})
        ignore_error: true
      - cmd: docker rmi -f $(docker images -q -f reference={{.APP_FOO_REPO}}) 2> /dev/null
#      - cmd: docker rmi -f $(docker images -q -f reference={{.APP_FOO_REPO}})
        ignore_error: true
