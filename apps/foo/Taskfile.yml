version: '3'

set: [pipefail]

vars:
  APP_FOO_REVISION:
    sh: git write-tree --prefix=apps/foo
  APP_FOO_CID: '{{.APP_FOO_REVISION | trunc 7}}'
  APP_FOO_VERSION: '{{.APP_VERSION}}-{{.APP_FOO_CID}}'
  APP_FOO_IMAGE: '{{.PROJECT_REPO}}/{{.PROJECT}}-app-foo'
  APP_FOO_REF: '{{.APP_FOO_IMAGE}}:{{.APP_FOO_CID}}'

tasks:
  binary:
    run: once
    status:
      - test -f target/app-foo-{{.APP_FOO_VERSION}}.jar
      - '{{.LIB_BINARIES_STATUS}}'
    cmds:
      # deps
      - task: ::lib:binaries
      # cmds
      - cmd: >
          mvn clean verify -am -T1C
          -Drevision={{.APP_FOO_VERSION}}
          -Dlibs.version={{.LIBS_VERSION}}
  image:
    run: once
    vars:
      COMMAND: '{{if eq .REGISTRY "localhost"}}inspect{{else}}pull{{end}}'
    status:
      - docker image {{.COMMAND}} {{.APP_FOO_REF}}
      - '{{.LIB_BINARIES_STATUS}}'
    cmds:
      - task: binary
      - task: ::docker:image:reset
        vars:
          DOCKER_IMAGE: '{{.APP_FOO_IMAGE}}'
      - cmd: >
          docker build target/docker-context
          -f Dockerfile
          -t {{.APP_FOO_REF}}
      - task: ::docker:image:push
        vars:
          DOCKER_IMAGE: '{{.APP_FOO_REF}}'
