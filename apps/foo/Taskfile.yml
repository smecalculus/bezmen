version: '3'

set: [pipefail]

tasks:
  code:
    run: once
    cmds:
      - mvn spotless:apply -Drevision={{.APP_FOO_VERSION}} -Dlibs.version={{.LIB_VERSION}}
  binary:
    run: once
    status:
      - test -f target/app-foo-{{.APP_FOO_VERSION}}.jar
      - '{{.LIB_BINARIES_STATUS}}'
    cmds:
      - task: ::lib:binaries
      - cmd: >
          mvn clean verify
          --threads 2C
          --batch-mode
          -Drevision={{.APP_FOO_VERSION}}
          -Dlibs.version={{.LIB_VERSION}}
          -DskipTests=true
  units:
    run: once
    cmds:
      - task: ::lib:binaries
      - cmd: >
          mvn clean test
          --threads 2C
          --batch-mode
          -Drevision={{.APP_FOO_VERSION}}
          -Dlibs.version={{.LIB_VERSION}}
  integrations:
    run: once
    cmds:
      - task: ::lib:binaries
      - cmd: >
          mvn clean verify
          --threads 2C
          --batch-mode
          -Drevision={{.APP_FOO_VERSION}}
          -Dlibs.version={{.LIB_VERSION}}
          -DskipUnits=true
  image:
    run: once
    status:
      - docker image {{.COMMAND}} {{.APP_FOO_REF}}
      - '{{.LIB_BINARIES_STATUS}}'
    cmds:
      - task: binary
      - task: ::docker:image:reset
        vars:
          IMAGE: '{{.APP_FOO_IMAGE}}'
      - cmd: >
          docker build target/docker-context
          -f Dockerfile
          -t {{.APP_FOO_REF}}
      - task: ::docker:image:push
        vars:
          REF: '{{.APP_FOO_REF}}'
