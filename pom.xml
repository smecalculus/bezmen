<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>smecalculus.bezmen</groupId>
  <artifactId>bezmen</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <modules>
    <module>lib</module>
    <module>app</module>
    <module>tool</module>
    <module>test</module>
  </modules>

  <properties>
    <revision>0.1.0-SNAPSHOT</revision>
    <jacoco.version>0.8.12</jacoco.version>
    <skipTests>false</skipTests>  <!--unit, integration and e2e tests-->
    <skipUnits>${skipTests}</skipUnits>  <!--unit tests only-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <profiles>
    <profile>
      <id>church</id>
      <properties>
        <devenv>church</devenv>
        <maven.compiler.release>21</maven.compiler.release>  <!--bump when kotlin will be ready-->
      </properties>
    </profile>
    <profile>
      <id>turing</id>
      <properties>
        <devenv>turing</devenv>
        <maven.compiler.release>21</maven.compiler.release>
      </properties>
    </profile>
    <profile>
      <id>godel</id>
      <activation>
        <activeByDefault>true</activeByDefault>  <!--default when building directly-->
      </activation>
      <properties>
        <devenv>godel</devenv>
        <maven.compiler.release>17</maven.compiler.release>
      </properties>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/smecalculus/bezmen</url>
    </repository>
  </distributionManagement>

  <build>
    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>${project.basedir}/src/it/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.4.1</version>
          <configuration>
            <rules>
              <banDuplicatePomDependencyVersions/>
              <requireExplicitDependencyScope/>
              <requireProfileIdsExist/>
              <dependencyConvergence/>
              <requireUpperBoundDeps/>
              <requireReleaseDeps>
                <excludes>
                  <exclude>smecalculus.bezmen</exclude>
                </excludes>
              </requireReleaseDeps>
              <banDynamicVersions>
                <ignores>
                  <ignore>smecalculus.bezmen</ignore>
                </ignores>
              </banDynamicVersions>
            </rules>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>
          <executions>
            <execution>
              <phase>validate</phase>
            </execution>
          </executions>
          <configuration>
            <formats>
              <format>
                <includes>
                  <include>*.xml</include>
                  <include>*.yaml</include>
                  <include>*.properties</include>
                  <include>Dockerfile</include>
                </includes>
                <trimTrailingWhitespace/>
                <endWithNewline/>
                <indent>
                  <spaces>true</spaces>
                  <spacesPerTab>2</spacesPerTab>
                </indent>
              </format>
            </formats>
            <java>
              <palantirJavaFormat>
                <version>2.41.0</version>
              </palantirJavaFormat>
            </java>
            <kotlin>
              <ktlint>
                <version>1.0.1</version>
              </ktlint>
            </kotlin>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.21.2</version>
          <configuration>
            <linkXRef>false</linkXRef>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.6.0</version>
          <configuration>
            <flattenMode>oss</flattenMode>
            <outputDirectory>${project.build.directory}</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten.clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>2.0.0</version>
          <configuration>
            <jvmTarget>${maven.compiler.release}</jvmTarget>
          </configuration>
          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
            <execution>
              <id>testCompile</id>
              <goals>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                  <sourceDir>${project.basedir}/src/it/kotlin</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
              </path>
            </annotationProcessorPaths>
          </configuration>
          <executions>
            <execution>
              <id>default-testCompile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <configuration>
                <compileSourceRoots>
                  <compileSourceRoot>${project.basedir}/src/test/java</compileSourceRoot>
                  <compileSourceRoot>${project.basedir}/src/it/java</compileSourceRoot>
                </compileSourceRoots>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.8.5.0</version>
          <configuration>
            <failThreshold>High</failThreshold>
            <jvmArgs>-Dfindbugs.assertionmethods=java.util.Objects.requireNonNull</jvmArgs>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>4.8.5</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <skipTests>${skipUnits}</skipTests>
            <forkCount>1</forkCount>
            <properties>
              <configurationParameters>
                junit.jupiter.testinstance.lifecycle.default=per_class
                junit.jupiter.testclass.order.default=org.junit.jupiter.api.ClassOrderer$Random
                junit.jupiter.testmethod.order.default=org.junit.jupiter.api.MethodOrderer$Random
                junit.jupiter.execution.parallel.enabled=true
                junit.jupiter.execution.parallel.mode.default=same_thread
                junit.jupiter.execution.parallel.mode.classes.default=concurrent
                junit.jupiter.execution.parallel.config.strategy=fixed
                junit.jupiter.execution.parallel.config.fixed.parallelism=2
              </configurationParameters>
            </properties>
            <systemPropertyVariables>
              <java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.6.1</version>
          <executions>
            <execution>
              <id>get</id>
              <phase>none</phase>
              <goals>
                <goal>get</goal>
              </goals>
              <configuration>
                <transitive>false</transitive>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <version>${revision}</version>
                <packaging>${project.packaging}</packaging>
                <remoteRepositories>${project.distributionManagement.repository.url}</remoteRepositories>
              </configuration>
            </execution>
            <execution>
              <id>purge</id>
              <phase>none</phase>
              <goals>
                <goal>purge-local-repository</goal>
              </goals>
              <configuration>
                <resolutionFuzziness>artifactId</resolutionFuzziness>
                <manualIncludes>${project.groupId}:${project.artifactId}</manualIncludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <skipITs>${skipTests}</skipITs>
            <forkCount>2</forkCount>
            <properties>
              <configurationParameters>
                junit.jupiter.testinstance.lifecycle.default=per_class
                junit.jupiter.testclass.order.default=org.junit.jupiter.api.ClassOrderer$Random
                junit.jupiter.testmethod.order.default=org.junit.jupiter.api.MethodOrderer$Random
                junit.jupiter.execution.parallel.enabled=false
              </configurationParameters>
            </properties>
            <systemPropertyVariables>
              <java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <skip>${skipTests}</skip>
          </configuration>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>default-prepare-agent-integration</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report-integration</id>
              <goals>
                <goal>report-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.2</version>
          <configuration>
            <skip>true</skip>  <!-- enable explicitly in library modules -->
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
          <configuration>
            <skip>true</skip>  <!-- enable explicitly in public modules -->
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
