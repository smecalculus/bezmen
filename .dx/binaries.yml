---
- name: Binaries
  hosts: lib
  run_once: true
  tasks:
    - name: Capture status
      ansible.builtin.command:
        # todo: try to implement more lightweight check
        cmd: >
          mvn
          {% if binary_repo == 'local' %}
          --offline
          {% else %}
          --define remoteRepositories=github::::https://{{ binary_repo }}/smecalculus/bezmen
          {% endif %}
          dependency:get
          --define transitive=false
          --define artifact=org.smecalculus.bezmen:libs:{{ lib_version }}:pom
        chdir: "{{ playbook_dir }}/../libs"
      register: binary_status
      changed_when: binary_status.rc != 0
      failed_when: false
    - name: Status command
      ansible.builtin.debug:
        msg: "{{ binary_status.cmd|join(' ') }}"
      when: binary_status is changed
    - name: Create binaries
      ansible.builtin.command:
        cmd: >
          mvn
          --no-snapshot-updates
          --fail-fast
          --batch-mode
          --threads 1C
          clean
          {% if focus == 'solution' %}
          deploy
          {% else %}
          install
          {% endif %}
          --define revision={{ lib_version }}
        chdir: "{{ playbook_dir }}/../libs"
      changed_when: true
      when: binary_status is changed

- name: Binaries
  hosts: app
  run_once: true
  tasks:
    - name: Capture cid
      ansible.builtin.command:
        cmd: git hash-object --stdin
        stdin: |
          {{ lib_cid }}
          {{ app_cid }}
      # TODO: try to choose better name
      register: image_cid
      changed_when: false
      tags: [always]
    - name: Capture statuses
      ansible.builtin.command:
        cmd: docker {{ docker_entity }} inspect {{ item.value }}:{{ image_cid.stdout[:7] }}
      register: image_status
      changed_when: image_status.rc != 0
      failed_when: false
      loop: "{{ app_images|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      tags: [always]
    - name: Status commands
      ansible.builtin.debug:
        msg: "{{ image_status.results|map(attribute='cmd')|map('join', ' ') }}"
      when: image_status is changed
      tags: [always]
    - name: Create binaries
      ansible.builtin.command:
        cmd: >
          mvn
          --no-snapshot-updates
          --fail-fast
          --batch-mode
          --threads 1C
          {% if not hostvars.lib.binary_status|default({}) is changed %}
          --projects {{ image_status.results|select('changed')|map(attribute='item.key')|join(',') }}
          {% endif %}
          clean
          {% if up_to_images|default(false) %}
          verify
          {% else %}
          package
          {% endif %}
          --define revision={{ app_version }}
          --define lib.version={{ lib_version }}
        chdir: "{{ playbook_dir }}/../apps"
        strip_empty_ends: false
      changed_when: true
      when: image_status is changed

- name: Binaries
  hosts: test
  run_once: true
  tasks:
    - name: Create binaries
      ansible.builtin.command:
        cmd: >
          mvn
          --no-snapshot-updates
          --batch-mode
          clean
          test-compile
          --define lib.version={{ lib_version }}
        chdir: "{{ playbook_dir }}/../tests"
        strip_empty_ends: false
      changed_when: true
      when: hostvars.lib.binary_status|default({}) is changed
