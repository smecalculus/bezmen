---
env_name: green

schema_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=schemas')[:7] }}"
lib_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=libs')[:7] }}"
app_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=apps')[:7] }}"
solution_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=solutions')[:7] }}"

dx_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=.dx')[:7] }}"
env_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=.env/' ~ env_name)[:7] }}"
test_cid: "{{ lookup('ansible.builtin.pipe', 'git write-tree --prefix=tests')[:7] }}"

usage: toy
prefs: turing

lib_version: 0.1.0-{{ lib_cid }}
app_version: 0.1.0-{{ app_cid }}

# How to work with private remote repositories?
# offline - no pull, nor push packages
# read_only - can pull packages
# read_write - can pull and push packages
repository_mode: offline

docker_registry: ghcr.io
docker_repo: smecalculus

docker_entity: "{{ 'image' if repository_mode == 'offline' else 'manifest' }}"

schema_images:
  postgres: "{{ docker_registry }}/{{ docker_repo }}/schema-postgres"
app_images:
  foo: "{{ docker_registry }}/{{ docker_repo }}/app-foo"
solution_image: "{{ docker_registry }}/{{ docker_repo }}/solution-{{ usage }}-{{ prefs }}"
pipeline_image: "{{ docker_registry }}/{{ docker_repo }}/pipeline"

capture_solution: true
capture_pipeline: true
