---
- import_playbook: binaries.yml # noqa: name[play]
  tags: [binaries, deps]

- name: Images
  hosts: schema
  tasks:
    - name: Capture status
      ansible.builtin.command:
        cmd: docker {{ docker_entity }} inspect {{ item.value }}:{{ schema_cid }}
      register: image_status
      changed_when: image_status.rc != 0
      failed_when: false
      loop: "{{ schema_images|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
    - name: Status commands
      ansible.builtin.debug:
        msg: "{{ image_status.results|map(attribute='cmd')|map('join', ' ') }}"
      when: image_status is changed
    - ansible.builtin.include_role: # noqa: name[missing]
        name: image
      vars:
        image_tag: "{{ schema_cid }}"
        image_name: "{{ item.value }}"
        image_home: "{{ playbook_dir }}/../schemas/{{ item.key }}"
      loop: "{{ image_status.results|select('changed')|map(attribute='item') }}"

- name: Images
  hosts: app
  tasks:
    - ansible.builtin.include_role: # noqa: name[missing]
        name: image
      vars:
        image_tag: "{{ hostvars.app.image_tag.stdout[:7] }}"
        image_name: "{{ item.value }}"
        image_home: "{{ playbook_dir }}/../apps/{{ item.key }}"
        image_context: target/docker-context
      loop: "{{ hostvars.app.image_status.results|select('changed')|map(attribute='item') }}"
      when: hostvars.app.image_status is changed
