---
- name: Binaries
  hosts: app
  run_once: true
  tasks:
    - name: Capture cid's
      ansible.builtin.command:
        cmd: git hash-object --stdin
        stdin: |
          {{ lib_cid }}
          {{ solution.apps[app].cid }}
      # TODO: try to choose better name
      register: image_cid
      changed_when: false
      loop: "{{ solution.apps.keys() }}"
      loop_control:
        loop_var: app
      tags: [always]
    - name: Declare cid's
      ansible.builtin.set_fact:
        image_cids: "{{ image_cid.results|items2dict(key_name='app', value_name='stdout') }}"
      tags: [always]
    - name: Capture statuses
      ansible.builtin.command:
        cmd: docker {{ docker_entity }} inspect {{ app.image.name }}:{{ image_cids[app.name][:7] }}-{{ devenv }}
      register: image_status
      changed_when: image_status.rc != 0
      failed_when: false
      loop: "{{ solution.apps.values() }}"
      loop_control:
        loop_var: app
        label: "{{ app.binary.name }}"
      tags: [always]
    - name: Status commands
      ansible.builtin.debug:
        msg: "{{ image_status.results|map(attribute='cmd')|map('join', ' ') }}"
      when: image_status is changed
      tags: [always]
    - name: Create binaries
      ansible.builtin.command:
        cmd: >
          mvn
          --no-snapshot-updates
          --fail-fast
          --batch-mode
          --threads 2
          --projects {{
            image_status.results
            | select('changed')
            | map(attribute='app.binary.name')
            | map('regex_replace', '^', 'apps/')
            | join(',')
          }}
          --also-make
          clean
          {{ maven_phase | default('package') }}
          --define maven.compiler.release={{ dev[devenv].jdk.release }}
        chdir: "{{ playbook_dir }}/.."
        strip_empty_ends: false
      changed_when: true
      when: image_status is changed

- name: Binaries
  hosts: test
  run_once: true
  tasks:
    - name: Create binaries
      ansible.builtin.command:
        cmd: >
          mvn
          --no-snapshot-updates
          --batch-mode
          --projects tools,tests
          --also-make
          clean
          package
        chdir: "{{ playbook_dir }}/.."
        strip_empty_ends: false
      changed_when: true
