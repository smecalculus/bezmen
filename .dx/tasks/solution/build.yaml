---
- name: Remove artifacts
  ansible.builtin.file:
    path: "{{ stack_dir }}/target"
    state: absent

- name: Create directories
  ansible.builtin.file:
    path: "{{ stack_dir }}/target/context"
    state: directory
    recurse: true

- name: Capture env
  ansible.builtin.include_vars:
    file: ../envs/ops/{{ opsenv }}/vars.yaml
    name: ops

- name: Build conf
  ansible.builtin.template:
    src: "../envs/ops/{{ opsenv }}/config.j2"
    dest: "{{ stack_dir }}/target/context/application.{{ config_exts[ops.config_mapping_mode] }}"
    mode: "644"
  vars:
    storage_name: postgres
    database_name: "{{ project_name }}"
    schema_name: sepulkarium
    owner_name: "{{ project_name }}"
    owner_password: "{{ project_name }}"

- name: Build spec
  ansible.builtin.template:
    src: "{{ stack_dir }}/compose.j2"
    dest: "{{ stack_dir }}/target/context/compose.yaml"
    mode: "644"
  vars:
    stack:
      name: "{{ project_name }}"
      config:
        file_name: "application.{{ config_exts[ops.config_mapping_mode] }}"
        mapping_mode: "{{ ops.config_mapping_mode }}"
    storage:
      name: postgres
      version: "{{ ops.postgres_version }}"
    database:
      name: "{{ project_name }}"
    schemas:
      - name: sepulkarium
        image:
          name: "{{ schema_images.postgres }}"
          tag: "{{ schema_cids.postgres }}"
        owner:
          name: "{{ project_name }}"
          password: "{{ project_name }}"
    apps:
      - name: sepuling
        image:
          name: "{{ app_images['sepuling-' ~ ops.lang_mode] }}"
          tag: "{{ hostvars.app.image_cids['sepuling-' ~ ops.lang_mode][:7] }}-{{ devenv }}"
