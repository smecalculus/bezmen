---
name: Sanity

on:
  pull_request:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  up-to-binaries:
    name: Up to binaries
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    permissions:
      checks: write
      packages: write
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Run setup-docker
        uses: ./.github/actions/setup-docker
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5.1.0
        with:
          context: stacks/toolchain/turing
          tags: stack/toolchain:turing
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run setup-maven
        uses: ./.github/actions/setup-maven
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run ansible-playbook codebase.yaml
        run: >-
          docker run --rm
          --volume $(pwd):$(pwd)
          --volume ~/.m2:/root/.m2
          --workdir $(pwd)/bakers/ansible
          stack/toolchain:turing
          ansible-playbook codebase.yaml
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run ansible-playbook binaries.yaml
        id: binaries
        run: >-
          docker run --rm
          --volume $(pwd):$(pwd)
          --volume ~/.m2:/root/.m2
          --workdir $(pwd)/bakers/ansible
          stack/toolchain:turing
          ansible-playbook binaries.yaml -v
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: mikepenz/action-junit-report@v4.1.0
        if: ${{ !cancelled() && (steps.binaries.outcome == 'success' || steps.binaries.outcome == 'failure') }}
        with:
          check_name: Unit test report
          report_paths: "**/target/surefire-reports/TEST-*.xml"
          require_tests: "${{ steps.binaries.outcome == 'failure' }}"
          fail_on_failure: false
          job_summary: false

  everything-is-fine:
    name: Everything is fine
    needs: [up-to-binaries]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ always() }}
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "::error::Something went wrong"
          exit 1
