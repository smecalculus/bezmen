---
name: Solution beyond doubt

on:
  merge_group:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  sources:
    name: Sources
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: ./.github/actions/prepare
        with:
          tools: python java
      - run: >
          ansible-playbook sources.yml -l lib:app
          -e docker_registry=${{ env.REGISTRY }}
        working-directory: .dx
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  packages:
    name: Packages
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    permissions:
      checks: write
      packages: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: ./.github/actions/prepare
        with:
          tools: python java docker
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: >
          ansible-playbook images.yml
          -e docker_registry=${{ env.REGISTRY }}
        working-directory: .dx
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: EnricoMi/publish-unit-test-result-action@v2.9.0
        if: ${{ !cancelled() }}
        with:
          check_name: Unit Test Report
          check_run_annotations: none
          compare_to_earlier_commit: false
          action_fail_on_inconclusive: true
          action_fail: true
          job_summary: false
          comment_mode: off
          files: |
            libs/*/target/surefire-reports/TEST-*.xml
            apps/*/target/surefire-reports/TEST-*.xml
      - uses: EnricoMi/publish-unit-test-result-action@v2.9.0
        if: ${{ !cancelled() }}
        with:
          check_name: Integration Test Report
          check_run_annotations: none
          compare_to_earlier_commit: false
          action_fail_on_inconclusive: true
          action_fail: true
          job_summary: false
          comment_mode: off
          files: |
            libs/*/target/failsafe-reports/TEST-*.xml
            apps/*/target/failsafe-reports/TEST-*.xml
      - uses: madrapps/jacoco-report@v1.6
        if: ${{ github.event_name == 'pull_request' && hashFiles(env.JACOCO_UNITS) != '' }}
        with:
          title: Unit Coverage Report
          paths: ${{ env.JACOCO_UNITS }}
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
        env:
          JACOCO_UNITS: tools/target/coverage/units/jacoco.xml
      - uses: madrapps/jacoco-report@v1.6
        if: ${{ github.event_name == 'pull_request' && hashFiles(env.JACOCO_INTEGRATIONS) != '' }}
        with:
          title: Integration Coverage Report
          paths: ${{ env.JACOCO_INTEGRATIONS }}
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
        env:
          JACOCO_INTEGRATIONS: tools/target/coverage/integrations/jacoco.xml
      - uses: madrapps/jacoco-report@v1.6
        if: ${{ github.event_name == 'pull_request' && hashFiles(env.JACOCO_OVERALL) != '' }}
        with:
          title: Overall Coverage Report
          paths: ${{ env.JACOCO_OVERALL }}
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
        env:
          JACOCO_OVERALL: tools/target/coverage/overall/jacoco.xml

  solution-compiling:
    name: Solution compiling
    if: ${{ github.event_name == 'merge_group' }}
    timeout-minutes: 5
    needs:
      - sources
      - packages
    strategy:
      fail-fast: false
      matrix:
        usage: [func]
        pref: [turing, church]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: ./.github/actions/prepare
        with:
          tools: python docker
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: >
          ansible-playbook solution.yml -t compile
          -e docker_registry=${{ env.REGISTRY }}
          -e usage=${{ matrix.usage }}
          -e prefs=${{ matrix.pref }}
        working-directory: .dx
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: solution-${{ matrix.usage }}-${{ matrix.pref }}
          path: solutions/target/context
          if-no-files-found: error

  solution-testing:
    name: Solution testing
    if: ${{ github.event_name == 'merge_group' }}
    timeout-minutes: 15
    needs: [solution-compiling]
    strategy:
      fail-fast: false
      matrix:
        usage: [func]
        pref: [turing, church]
        shard: [0, 1]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: ./.github/actions/prepare
        with:
          tools: python java docker
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v3.0.2
        with:
          name: solution-${{ matrix.usage }}-${{ matrix.pref }}
          path: solutions/target/context
      - run: >
          ansible-playbook solution.yml -t test
          -e docker_registry=${{ env.REGISTRY }}
          -e capture_pipeline=false
          -e usage=${{ matrix.usage }}
          -e prefs=${{ matrix.pref }}
          -e reminder=${{ matrix.shard }}
          -e modulus=2
        working-directory: .dx
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3.1.2
        if: ${{ !cancelled() }}
        with:
          name: e2e-test-report-${{ matrix.usage }}-${{ matrix.pref }}-${{ matrix.shard }}
          path: tests/e2e/target/surefire-reports/*.xml

  solution-packaging:
    name: Solution packaging
    if: ${{ github.event_name == 'merge_group' }}
    timeout-minutes: 5
    needs: [solution-testing]
    strategy:
      fail-fast: false
      matrix:
        usage: [func]
        pref: [turing, church]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: ./.github/actions/prepare
        with:
          tools: python docker
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v3.0.2
        with:
          name: solution-${{ matrix.usage }}-${{ matrix.pref }}
          path: solutions/target/context
      - run: >
          ansible-playbook solution.yml -t package
          -e docker_registry=${{ env.REGISTRY }}
          -e usage=${{ matrix.usage }}
          -e prefs=${{ matrix.pref }}
        working-directory: .dx

  solution-reporting:
    name: Solution reporting
    if: ${{ !cancelled() }}
    timeout-minutes: 5
    needs: [solution-testing]
    runs-on: ubuntu-22.04
    permissions:
      checks: write
    steps:
      - uses: actions/download-artifact@v3.0.2
        with:
          path: artifacts
      - run: ls -R
        working-directory: artifacts
      - uses: EnricoMi/publish-unit-test-result-action@v2.9.0
        with:
          check_name: E2E Test Report
          check_run_annotations: none
          compare_to_earlier_commit: false
          action_fail_on_inconclusive: true
          action_fail: true
          job_summary: false
          comment_mode: off
          files: artifacts/e2e-test-report-*/**/TEST-*.xml
