---
name: Task proposal

on:
  pull_request:
    branches-ignore: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: stack/gear

jobs:
  up-to-binaries:
    name: Up to binaries (${{ matrix.env.dev }})
    timeout-minutes: 5
    permissions:
      checks: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        env:
          - dev: turing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Run setup-gear
        uses: ./.github/actions/setup-gear
        with:
          devenv: ${{ matrix.env.dev }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run ansible-playbook binaries.yaml
        id: binaries
        run: >-
          docker run --rm
          --volume $(pwd):$(pwd)
          --volume ~/.m2:/root/.m2
          --env GITHUB_ACTOR=${{ github.actor }}
          --env GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          --workdir $(pwd)/orchestrator/ansible
          ${{ env.IMAGE_NAME }}:${{ matrix.env.dev }}
          ansible-playbook binaries.yaml -v
          -e devenv=${{ matrix.env.dev }}
          -e repo_mode=ro
      - uses: mikepenz/action-junit-report@v4.1.0
        if: ${{ !cancelled() && (steps.binaries.outcome == 'success' || steps.binaries.outcome == 'failure') }}
        with:
          check_name: Unit tests
          report_paths: "**/target/surefire-reports/TEST-*.xml"
          require_tests: "${{ steps.binaries.outcome == 'failure' }}"
          fail_on_failure: false
          job_summary: false

  everything-is-fine:
    name: Everything is fine
    needs: [up-to-binaries]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ always() }}
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "::error::Something went wrong"
          exit 1
