@startuml
skinparam nodesep 30
skinparam ranksep 30

file приложение as app_spec <<spec>>

rectangle "репозиторий\nисходников" {
	file приложение as app_code_before_development <<code>>
	file приложение as app_code_developed <<code>>
	file приложение as app_code_integrated <<code>>

	app_code_before_development ~~> app_code_developed
	app_code_developed ~~> app_code_integrated
}

rectangle "хранилище\nартефактов" {
	artifact приложение as app_binary_integrated <<binary>>
}

rectangle "локальная машина" {
	file приложение as app_code_before_validation <<code>>
	file инсталлятор as installer_code <<code>>
	file тесты as tests_code <<code>>

	artifact компилятор as compiler_binary <<binary>>
	artifact инсталлятор as installer_binary <<binary>>
	artifact приложение as app_binary <<binary>>
	artifact окружение as env_binary <<binary>>
	artifact валидатор as validator_binary <<binary>>
	artifact тесты as tests_binary <<binary>>
	artifact отчет as validator_proof <<proof>>

	control "[[стенд.puml стенд]]" as app_process
	control компилятор as compiler_process_1
	control компилятор as compiler_process_2
	control инсталлятор as installer_process
	control валидатор as validator_process_1

	actor разработчик as developer_1
	actor разработчик as developer_2
	actor разработчик as developer_3
}

actor разработчик as developer_0
actor разработчик as developer_4

app_code_before_validation <-r- developer_0
developer_0 .u. app_spec
developer_0 .d. app_code_before_development

app_code_before_validation .d. compiler_process_1
compiler_process_1 -d-> app_binary

compiler_binary .r. developer_1
developer_1 -r-> compiler_process_1

installer_binary .r. developer_2
installer_code .u. developer_2
developer_2 -r-> installer_process

app_binary .d. installer_process
env_binary .d. installer_process
installer_process -d-> app_process

app_process .d. validator_process_1

validator_binary .r. developer_3

tests_code .u. compiler_process_2
compiler_process_2 -u-> tests_binary
tests_binary .u. developer_3
developer_3 -r-> validator_process_1

validator_process_1 -d-> validator_proof
app_code_before_validation .d. developer_4
validator_proof .u. developer_4

developer_4 -r-> app_code_developed

actor бот as bot_1
actor бот as bot_2

rectangle "CI машина" {
	file приложение as app_code_before_integration <<code>>
	
	artifact приложение as app_binary_before_integration <<binary>>
	artifact отчет as integrator_proof <<proof>>
	
	control ... as integrator_process_1
	control ... as integrator_process_2

	app_code_before_integration .d. integrator_process_1
	integrator_process_1 -d-> app_binary_before_integration
	app_binary_before_integration -d-> integrator_process_2
	integrator_process_2 -d-> integrator_proof
}

app_code_developed .d. bot_1
bot_1 -d-> app_code_before_integration

bot_2 .u. app_code_before_integration
bot_2 .d. app_binary_before_integration
bot_2 .d. integrator_proof

bot_2 -u-> app_code_integrated
bot_2 -r-> app_binary_integrated
@enduml