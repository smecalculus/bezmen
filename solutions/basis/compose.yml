name: bezmen

networks:
  bezmen:
    name: bezmen

configs:
  bezmen:
    name: bezmen
    file: ./${CONFIG_FILE_NAME}

services:
  db:
    image: postgres:15.3-alpine
    container_name: env-db
    profiles:
      - turing
      - church
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: bezmen
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      bezmen: null

  schema-dba:
    image: ${SCHEMA_IMAGE}:${SCHEMA_TAG}
    container_name: schema-dba
    profiles:
      - turing
      - church
    depends_on:
      db:
        condition: service_healthy
    labels:
      image.name: ${SCHEMA_IMAGE}
    command: >
      --show-banner=false
      --changelog-file=alfa/dba/changelog.yml
      --url=jdbc:postgresql://db:5432/bezmen?currentSchema=public
      --liquibase-schema-name=public
      --username=postgres
      --password=password
      --labels=user,schema
      update
      -Dbezmen.schema=bezmen
      -Dbezmen.owner=bezmen
      -Dbezmen.password=bezmen
    networks:
      bezmen: null

  schema-owner:
    image: ${SCHEMA_IMAGE}:${SCHEMA_TAG}
    container_name: schema-owner
    profiles:
      - turing
      - church
    depends_on:
      schema-dba:
        condition: service_completed_successfully
    labels:
      image.name: ${SCHEMA_IMAGE}
    command: >
      --show-banner=false
      --changelog-file=alfa/owner/changelog.yml
      --url=jdbc:postgresql://db:5432/bezmen?currentSchema=bezmen
      --liquibase-schema-name=bezmen
      --username=bezmen
      --password=bezmen
      update
    networks:
      bezmen: null

  foo:
    image: ${FOO_IMAGE}:${FOO_TAG}
    container_name: app-foo
    ports:
      - 8080:8080
    configs:
      - source: bezmen
        target: /home/bezmen/${CONFIG_FILE_NAME}
    command: >
      --bezmen.config.mapping.mode=${CONFIG_MAPPING_MODE}
      --spring.config.location=optional:file:${CONFIG_FILE_NAME}
    depends_on:
      schema-owner:
        condition: service_completed_successfully
    labels:
      image.name: ${FOO_IMAGE}
    networks:
      bezmen: null
