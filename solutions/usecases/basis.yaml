networks:
  stack_network:

configs:
  stack_config:
    file: ./${CONFIG_FILE_NAME}

services:
  db:
    image: postgres:${POSTGRES_VERSION}-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stack_network

  schema-dba:
    image: ${SCHEMA_IMAGE}:${SCHEMA_TAG}
    depends_on:
      db:
        condition: service_healthy
    labels:
      image.name: ${SCHEMA_IMAGE}
    command: >
      --show-banner=false
      --changelog-file=sepulkarium/dba/changelog.yaml
      --url=jdbc:postgresql://db:5432/${DATABASE_NAME}?currentSchema=public
      --liquibase-schema-name=public
      --username=postgres
      --password=password
      --labels=user,schema
      update
      -Downer.name=${OWNER_NAME}
      -Downer.password=${OWNER_PASSWORD}
      -Dschema.name=${SCHEMA_NAME}
    networks:
      - stack_network

  schema-owner:
    image: ${SCHEMA_IMAGE}:${SCHEMA_TAG}
    depends_on:
      schema-dba:
        condition: service_completed_successfully
    labels:
      image.name: ${SCHEMA_IMAGE}
    command: >
      --show-banner=false
      --changelog-file=sepulkarium/owner/changelog.yaml
      --url=jdbc:postgresql://db:5432/${DATABASE_NAME}?currentSchema=${SCHEMA_NAME}
      --liquibase-schema-name=${SCHEMA_NAME}
      --username=${OWNER_NAME}
      --password=${OWNER_PASSWORD}
      update
    networks:
      - stack_network

  sepuling:
    image: ${APP_IMAGE}:${APP_TAG}
    ports:
      - 8080:8080
    configs:
      - source: stack_config
        target: /home/app/${CONFIG_FILE_NAME}
    command: >
      --solution.config.mapping.mode=${CONFIG_MAPPING_MODE}
      --spring.config.location=optional:file:application.yaml
    depends_on:
      schema-owner:
        condition: service_completed_successfully
    labels:
      image.name: ${APP_IMAGE}
    networks:
      - stack_network
