version: '3'

set: [pipefail]

vars:
  STAGE_VERIFICATION: verified

tasks:
  run:
    run: once
    vars:
      COMMAND: '{{if eq .REGISTRY "localhost"}}inspect{{else}}pull{{end}}'
    status:
      - task --dir {{.ROOT_DIR}} --status lib:binary
      - docker image {{.COMMAND}} {{.APP_FOO_REF}}-{{.STAGE_VERIFICATION}}
      - docker image {{.COMMAND}} {{.LIB_SCHEMA_REF}}-{{.STAGE_VERIFICATION}}
      - docker image {{.COMMAND}} {{.TEST_REF}}-{{.STAGE_VERIFICATION}}
      - docker image {{.COMMAND}} {{.STAND_REF}}-{{.STAGE_VERIFICATION}}
    cmds:
      # deps
      - task: ::stand:run
      - task: ::test:run
      # actions
      - task: approve
  approve:
    run: once
    internal: true
    cmds:
      - docker tag {{.APP_FOO_REF}} {{.APP_FOO_REF}}-{{.STAGE_VERIFICATION}}
      - docker tag {{.LIB_SCHEMA_REF}} {{.LIB_SCHEMA_REF}}-{{.STAGE_VERIFICATION}}
      - docker tag {{.TEST_REF}} {{.TEST_REF}}-{{.STAGE_VERIFICATION}}
      - docker tag {{.STAND_REF}} {{.STAND_REF}}-{{.STAGE_VERIFICATION}}
  publish:
    run: once
    preconditions:
      - sh: '[ "{{.REGISTRY}}" != "localhost" ]'
    cmds:
      - docker push {{.LIB_SCHEMA_REF}}-{{.STAGE_VERIFICATION}}
      - docker push {{.APP_FOO_REF}}-{{.STAGE_VERIFICATION}}
      - docker push {{.TEST_REF}}-{{.STAGE_VERIFICATION}}
      - docker push {{.STAND_REF}}-{{.STAGE_VERIFICATION}}
  noop:
    run: once
    internal: true
