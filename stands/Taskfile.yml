version: '3'

set: [pipefail]

vars:
  STAND_REVISION:
    sh: git write-tree --prefix=stands
  STAND_CID: '{{.STAND_REVISION | trunc 7}}'

includes:
  toy:
    taskfile: types/Taskfile.toy.yml
    dir: types
  func:
    taskfile: types/Taskfile.func.yml
    dir: types

env:
  SCHEMA_CID: '{{.LIB_SCHEMA_CID}}'
  SCHEMA_IMAGE: '{{.LIB_SCHEMA_IMAGE}}'
  SCHEMA_REF: '{{.LIB_SCHEMA_REF}}'
  FOO_CID: '{{.APP_FOO_CID}}'
  FOO_IMAGE: '{{.APP_FOO_IMAGE}}'
  FOO_REF: '{{.APP_FOO_REF}}'
  PROPS_COMBO: '{{.PROPS}}'

tasks:
  image:
    run: when_changed
    vars:
      COMMAND: '{{if eq .REGISTRY "localhost"}}inspect{{else}}pull{{end}}'
      STAND_TYPE: '{{.STAND_TYPE | default .USAGE}}'
      STAND_IMAGE: '{{.PROJECT_REPO}}/{{.PROJECT}}-stand-{{.STAND_TYPE}}'
      STAND_REF: '{{.STAND_IMAGE}}:{{.STAND_CID}}'
    status:
      - docker image {{.COMMAND}} {{.STAND_REF}}
    cmds:
      - task: :docker:image:reset
        vars:
          DOCKER_IMAGE: '{{.STAND_IMAGE}}'
      - cmd: >
          docker build .
          -f Dockerfile
          -t {{.STAND_REF}}
          --build-arg STAND_TYPE={{.STAND_TYPE}}
      - task: :docker:image:push
        vars:
          DOCKER_IMAGE: '{{.STAND_REF}}'
  run:
    run: once
    cmds:
      - task: :lib:schema:image
      - task: :app:foo:image
      - task: image
      - task: wipe-db
      - cmd: >
          docker compose
          --file compose.yml
          --profile {{.PROPS}}
          up
          --remove-orphans
          --detach
  wipe:
    run: once
    aliases: [rm, prune, down]
    cmds:
      - cmd: >
          docker compose
          --file compose.yml
          --file types/compose.{{.USAGE}}.yml
          --profile {{.PROPS}}
          down
          --volumes
  wipe-db:
    run: once
    internal: true
    status:
      - docker inspect schema-owner-{{.LIB_SCHEMA_CID}}
    cmds:
      - docker rm -f env-db
