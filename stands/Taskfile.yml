version: '3'

set: [pipefail]

vars:
  STAND_REVISION:
    sh: git write-tree --prefix=stands
  STAND_CID: '{{.STAND_REVISION | trunc 7}}'
  STAND_X_REF: '{{.PROJECT_REPO}}/{{.PROJECT_NAME}}-stand-{{.USAGE}}:{{.STAND_CID}}'

includes:
  basis:
    taskfile: basis/Taskfile.yml
    dir: basis
  toy:
    taskfile: toy/Taskfile.yml
    dir: toy
  func:
    taskfile: func/Taskfile.yml
    dir: func

env:
  SCHEMA_CID: '{{.LIB_SCHEMA_CID}}'
  SCHEMA_IMAGE: '{{.LIB_SCHEMA_IMAGE}}'
  SCHEMA_REF: '{{.LIB_SCHEMA_REF}}'
  FOO_CID: '{{.APP_FOO_CID}}'
  FOO_IMAGE: '{{.APP_FOO_IMAGE}}'
  FOO_REF: '{{.APP_FOO_REF}}'
  PROPS_COMBO: '{{.PROPS}}'

tasks:
  images:
    run: once
    internal: true
    cmds:
      - task: :stand:basis:image
      - task: :stand:toy:image
      - task: :stand:func:image
  run:
    run: once
    cmds:
      - task: :lib:schema:image
      - task: :app:foo:image
      - task: :stand:basis:image
      - task: :stand:{{.USAGE}}:image
      - task: wipe-db
      - cmd: >
          docker compose
          --file basis/compose.yml
          --file {{.USAGE}}/compose.yml
          --profile {{.PROPS}}
          up
          --remove-orphans
          --detach
  wipe:
    run: once
    aliases: [rm, prune, down]
    cmds:
      - cmd: >
          docker compose
          --file basis/compose.yml
          --file {{.USAGE}}/compose.yml
          --profile {{.PROPS}}
          down
          --volumes
  wipe-db:
    run: once
    internal: true
    status:
      - docker inspect schema-owner-{{.LIB_SCHEMA_CID}}
    cmds:
      - docker rm -f env-db
