version: '3'

set: [pipefail]

vars:
  STAND_TOY_REVISION:
    sh: git write-tree --prefix=stands/toy
  STAND_TOY_REV: '{{.STAND_TOY_REVISION | trunc 7}}'
  STAND_TOY_IMAGE: stand-toy
  STAND_TOY_REPO: '{{.REGISTRY}}/smecalculus/{{.STAND_TOY_IMAGE}}'
  STAND_TOY_REF: '{{.STAND_TOY_REPO}}:{{.STAND_TOY_REV}}'

tasks:
  image:
    run: once
    vars:
      COMMAND: '{{if eq .REGISTRY "localhost"}}inspect{{else}}pull{{end}}'
    status:
      - docker image {{.COMMAND}} {{.STAND_TOY_REF}}
    cmds:
      # deps
      - task: reset
      # actions
      - cmd: >
          docker build .
          -f Dockerfile
          -t {{.STAND_TOY_REF}}
  run:
    run: once
    env:
      REGISTRY: '{{.REGISTRY}}'
      SCHEMA_TAG: '{{.LIB_SCHEMA_REV}}'
      FOO_TAG: '{{.APP_FOO_REV}}'
    cmds:
      # deps
      - task: ::lib:schema:image
      - task: ::app:foo:image
      - task: image
      # wipes
      - task: wipe-db
      # actions
      - cmd: >
          docker compose
          --profile {{.DB_VENDOR}}
          up
          --detach
  wipe:
    run: once
    env:
      REGISTRY: '{{.REGISTRY}}'
      SCHEMA_TAG: '{{.LIB_SCHEMA_REV}}'
      FOO_TAG: '{{.APP_FOO_REV}}'
    cmds:
      - cmd: >
          docker compose
          --profile {{.DB_VENDOR}}
          down
          --volumes
  wipe-db:
    run: once
    internal: true
    status:
      - docker inspect schema-owner-{{.LIB_SCHEMA_REV}}
    cmds:
      - docker rm -f env-db
  reset:
    run: once
    internal: true
    cmds:
      - cmd: docker rmi -f $(docker images -q -f reference={{.STAND_TOY_REPO}}) 2> /dev/null
        ignore_error: true
