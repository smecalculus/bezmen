---
- name: Building
  hosts: db
  run_once: true
  tasks:
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/db/capture.yaml
      tags: [always]
    - ansible.builtin.import_role:  # noqa: name[missing]
        name: image
        tasks_from: clean
      vars:
        image_keys: >-
          {{ image_status.results
           | select('changed')
           | map(attribute='db.image')
           | map('regex_replace', '$', '/' ~ devenv)
          }}
      when: image_status is changed
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/db/build.yaml
      when: image_status is changed

- name: Building & Checking
  hosts: app
  run_once: true
  tasks:
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/app/capture.yaml
      tags: [always]
    - ansible.builtin.import_role:  # noqa: name[missing]
        name: image
        tasks_from: clean
      vars:
        image_keys: >-
          {{ image_status.results
           | select('changed')
           | map(attribute='app.image')
           | map('regex_replace', '$', '/' ~ devenv)
          }}
      when: image_status is changed
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/app/build-and-check.yaml
      vars:
        maven_phase: "{{ 'deploy' if repo_mode == 'rw' else 'install' }}"
      when: image_status is changed

- name: Publishing
  hosts: image
  run_once: true
  tasks:
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/db/publish.yaml
      when: hostvars.db.image_status is changed
    - ansible.builtin.import_tasks:  # noqa: name[missing]
        file: tasks/app/publish.yaml
      when: hostvars.app.image_status is changed
